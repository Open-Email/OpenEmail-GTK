using Gtk 4.0;
using Adw 1;

template $Preferences: Adw.PreferencesDialog {
  content-height: 500;

  Adw.PreferencesPage {
    title: _("General");
    icon-name: "settings-symbolic";

    Adw.PreferencesGroup {
      title: _("Sync");

      Adw.ComboRow sync_interval_combo_row {
        title: _("Check Notifications Every");
        notify::selected => $_sync_interval_selected();

        model: StringList {
          strings [
            _("Manual"),
            _("1 minute"),
            _("5 minutes"),
            _("15 minutes"),
            _("30 minutes"),
            _("60 minutes"),
          ]
        };
      }
    }

    Adw.PreferencesGroup {
      title: _("Account");
      separate-rows: true;

      Adw.ButtonRow {
        title: _("Log Out");
        activated => $_remove_account();

        styles [
          "destructive-action",
        ]
      }

      Adw.ButtonRow {
        title: _("Delete Account");
        activated => $_delete_account();

        styles [
          "destructive-action",
        ]
      }
    }
  }

  Adw.PreferencesPage {
    title: _("Domains");
    icon-name: "website-symbolic";

    Adw.PreferencesGroup domains {
      title: _("Trusted Domains");
      description: _("Contact requests from these domains will be automatically accepted");

      header-suffix: Button {
        valign: end;
        icon-name: "list-add-symbolic";
        tooltip-text: _("Add Domain");
        clicked => $_new_domain();

        styles [
          "flat",
        ]
      };
    }
  }

  Adw.PreferencesPage {
    title: _("Keys");
    icon-name: "key-symbolic";

    Adw.PreferencesGroup {
      title: _("Private Keys");

      Adw.ActionRow {
        title: _("Private Signing Key");
        subtitle: bind template.private-signing-key;
        subtitle-selectable: true;

        styles [
          "property",
          "monospace",
        ]
      }

      Adw.ActionRow {
        title: _("Private Encryption Key");
        subtitle: bind template.private-encryption-key;
        subtitle-selectable: true;

        styles [
          "property",
          "monospace",
        ]
      }
    }

    Adw.PreferencesGroup {
      title: _("Public Keys");

      Adw.ActionRow {
        title: _("Public Signing Key");
        subtitle: bind template.public-signing-key;
        subtitle-selectable: true;

        styles [
          "property",
          "monospace",
        ]
      }

      Adw.ActionRow {
        title: _("Public Encryption Key");
        subtitle: bind template.public-encryption-key;
        subtitle-selectable: true;

        styles [
          "property",
          "monospace",
        ]
      }
    }
  }
}

Adw.AlertDialog confirm_remove_dialog {
  heading: _("Log Out?");
  body: _("All local data will be deleted. Log in again to restore data.");
  default-response: "remove";
  response::remove => $_confirm_remove();

  responses [
    close: _("Cancel"),
    remove: _("Log Out") destructive,
  ]
}

Adw.AlertDialog confirm_delete_dialog {
  heading: _("Delete Account?");
  body: _("All remote data on the server will be permanently deleted");
  default-response: "cancel";
  response::delete => $_confirm_delete();

  responses [
    close: _("Cancel"),
    delete: _("Delete") destructive,
  ]
}

Adw.AlertDialog add_domain_dialog {
  heading: _("New Domain");
  default-response: "add";
  focus-widget: domain_entry;
  response::add => $_add_domain();

  extra-child: Adw.PreferencesGroup {
    Adw.EntryRow domain_entry {
      title: _("Domain");
      activates-default: true;
    }
  };

  responses [
    close: _("Cancel"),
    add: _("Add") suggested,
  ]
}

$Form domain_form {
  form: template;
  submit: add_domain_dialog;

  plain: StringList {
    strings [
      "domain_entry",
    ]
  };
}
