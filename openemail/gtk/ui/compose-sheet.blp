using Gtk 4.0;
using Adw 1;

template $ComposeSheet: Adw.BreakpointBin {
  width-request: 360;
  height-request: 294;

  Adw.Breakpoint {
    condition ("max-width: 900")

    setters {
      bottom_sheet.align: 0.5;
    }
  }

  child: Adw.BottomSheet bottom_sheet {
    reveal-bottom-bar: false;
    show-drag-handle: false;
    full-width: false;
    align: 0.02;

    sheet: Adw.BreakpointBin {
      width-request: 360;
      height-request: 294;

      Adw.Breakpoint {
        condition ("max-width: 450")

        setters {
          privacy_switcher.display-mode: icons;
        }
      }

      child: Adw.ToolbarView {
        [top]
        Adw.HeaderBar {
          show-start-title-buttons: false;
          show-end-title-buttons: false;

          title-widget: Adw.InlineViewSwitcher privacy_switcher {
            valign: center;
            stack: privacy_stack;
            display-mode: both;
          };

          [start]
          Button {
            label: _("Cancel");
            clicked => $_cancel();
          }

          [end]
          Button send_button {
            label: _("Send");
            clicked => $_send_message();

            styles [
              "suggested-action",
            ]
          }
        }

        [top]
        ActionBar {
          [start]
          Box {
            margin-top: 4;
            margin-start: 4;
            orientation: vertical;

            Separator {}

            Adw.ViewStack privacy_stack {
              enable-transitions: true;
              visible-child-name: bind template.privacy bidirectional;

              Adw.ViewStackPage {
                name: "private";
                title: _("Private");
                icon-name: "private-message-symbolic";

                child: Box {
                  Label readers_label {
                    margin-end: 6;
                    label: _("Readers:");

                    styles [
                      "dimmed",
                    ]
                  }

                  Text readers {
                    height-request: 42;
                    hexpand: true;
                    insert-text => $_readers_insert_text();

                    accessibility {
                      labelled-by: readers_label;
                    }
                  }
                };
              }

              Adw.ViewStackPage {
                name: "public";
                title: _("Public");
                icon-name: "broadcasts-symbolic";

                child: Label {
                  halign: start;
                  label: _("Readers: Everyone");

                  styles [
                    "dimmed",
                  ]
                };
              }
            }

            Separator {}

            Box {
              hexpand: true;
              margin-top: 6;

              Label subject_label {
                margin-end: 6;
                label: _("Subject:");

                styles [
                  "dimmed",
                ]
              }

              Text subject {
                height-request: 30;
                hexpand: true;

                accessibility {
                  labelled-by: subject_label;
                }
              }
            }
          }
        }

        content: ScrolledWindow {
          propagate-natural-height: true;

          child: Box {
            orientation: vertical;

            Separator {
              margin-start: 10;
              margin-end: 12;
            }

            $Body body_view {
              top-margin: 12;
              bottom-margin: 90;
              left-margin: 12;
              right-margin: 12;

              accessibility {
                label: _("Message");
              }
            }

            $Attachments attachments {
              margin-start: 12;
              margin-end: 12;
            }
          };
        };

        [bottom]
        ActionBar {
          [start]
          Button {
            icon-name: "text-bold-symbolic";
            tooltip-text: _("Bold");
            clicked => $_format_bold();

            ShortcutController {
              scope: managed;

              Shortcut {
                trigger: "<primary>b";
                action: "activate";
              }
            }
          }

          [start]
          Button {
            icon-name: "text-italic-symbolic";
            tooltip-text: _("Italic");
            clicked => $_format_italic();

            ShortcutController {
              scope: managed;

              Shortcut {
                trigger: "<primary>i";
                action: "activate";
              }
            }
          }

          [start]
          Button {
            icon-name: "text-strikethrough-symbolic";
            tooltip-text: _("Strikethrough");
            clicked => $_format_strikethrough();
          }

          [start]
          Button {
            icon-name: "text-heading-symbolic";
            tooltip-text: _("Increase Heading Level");
            clicked => $_format_heading();
          }

          [start]
          Button {
            icon-name: "quotation-symbolic";
            tooltip-text: _("Quote");
            clicked => $_format_quote();
          }

          [end]
          Button {
            clicked => $_attach_files();
            icon-name: "mail-attachment-symbolic";
            tooltip-text: _("Attach Files");
          }

          [end]
          Button {
            icon-name: "emoji-symbolic";
            tooltip-text: _("Emoji Picker");
            clicked => $_insert_emoji();
          }
        }

        styles [
          "view",
        ]
      };
    };

    bottom-bar: Adw.Clamp {
      halign: center;
      margin-top: 9;
      margin-bottom: 9;
      margin-start: 6;
      margin-end: 6;
      maximum-size: 360;

      child: Label {
        label: bind $_get_bottom_bar_label(subject.text) as <string>;
        ellipsize: end;

        styles [
          "heading",
        ]
      };
    };
  };
}

$Form compose_form {
  submit-widget: send_button;

  $FormField {
    field: readers;
    type: address-list;
    active: bind $_get_readers_field_active(template.privacy) as <bool>;
  }

  $FormField {
    field: subject;
  }

  $FormField {
    field: body_view;
  }
}
