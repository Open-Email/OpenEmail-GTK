using Gtk 4.0;
using Adw 1;

template $ComposeDialog: Adw.Dialog {
  width-request: 360;
  height-request: 294;
  content-width: 650;
  content-height: 500;
  title: _("New Message");
  closed => $_closed();

  child: Adw.ToolbarView {
    [top]
    Adw.HeaderBar {
      show-start-title-buttons: false;
      show-end-title-buttons: false;

      title-widget: Adw.InlineViewSwitcher privacy_switcher {
        valign: center;
        stack: privacy_stack;
        display-mode: both;
      };

      [start]
      Button {
        label: _("Cancel");
        action-name: "window.close";
      }

      [end]
      Button send_button {
        label: _("Send");
        clicked => $_send_message();

        styles [
          "suggested-action",
        ]
      }
    }

    [top]
    ActionBar {
      [start]
      Box {
        margin-top: 4;
        margin-start: 4;
        orientation: vertical;

        Separator {}

        Adw.ViewStack privacy_stack {
          enable-transitions: true;
          visible-child-name: bind template.privacy bidirectional;

          Adw.ViewStackPage {
            name: "private";
            title: _("Private");
            icon-name: "private-message-symbolic";

            child: Box {
              Label readers_label {
                margin-end: 6;
                label: _("Readers:");

                styles [
                  "dimmed",
                ]
              }

              Text readers {
                height-request: 42;
                hexpand: true;
                insert-text => $_readers_insert_text();

                accessibility {
                  labelled-by: readers_label;
                }
              }
            };
          }

          Adw.ViewStackPage {
            name: "public";
            title: _("Public");
            icon-name: "broadcasts-symbolic";

            child: Label {
              halign: start;
              label: _("Readers: Everyone");

              styles [
                "dimmed",
              ]
            };
          }
        }

        Separator {}

        Box {
          hexpand: true;
          margin-top: 6;

          Label subject_label {
            margin-end: 6;
            label: _("Subject:");

            styles [
              "dimmed",
            ]
          }

          Text subject {
            height-request: 30;
            hexpand: true;

            accessibility {
              labelled-by: subject_label;
            }
          }
        }
      }
    }

    content: ScrolledWindow {
      child: Box {
        orientation: vertical;

        Separator {
          margin-start: 10;
          margin-end: 12;
        }

        $Body body_view {
          top-margin: 12;
          left-margin: 12;
          right-margin: 12;
          bottom-margin: 200;

          accessibility {
            label: _("Message");
          }
        }

        $Attachments attachments {
          margin-start: 12;
          margin-end: 12;
        }
      };
    };

    [bottom]
    ActionBar {
      [start]
      Button {
        icon-name: "text-bold-symbolic";
        tooltip-text: _("Bold");
        clicked => $_format_bold();

        ShortcutController {
          scope: managed;

          Shortcut {
            trigger: "<primary>b";
            action: "activate";
          }
        }
      }

      [start]
      Button {
        icon-name: "text-italic-symbolic";
        tooltip-text: _("Italic");
        clicked => $_format_italic();

        ShortcutController {
          scope: managed;

          Shortcut {
            trigger: "<primary>i";
            action: "activate";
          }
        }
      }

      [start]
      Button {
        icon-name: "text-strikethrough-symbolic";
        tooltip-text: _("Strikethrough");
        clicked => $_format_strikethrough();
      }

      [start]
      Button {
        icon-name: "text-heading-symbolic";
        tooltip-text: _("Increase Heading Level");
        clicked => $_format_heading();
      }

      [start]
      Button {
        icon-name: "quotation-symbolic";
        tooltip-text: _("Quote");
        clicked => $_format_quote();
      }

      [end]
      Button {
        clicked => $_attach_files();
        icon-name: "mail-attachment-symbolic";
        tooltip-text: _("Attach Files");
      }

      [end]
      Button {
        icon-name: "emoji-symbolic";
        tooltip-text: _("Emoji Picker");
        clicked => $_insert_emoji();
      }
    }
  };

  Adw.Breakpoint {
    condition ("max-width: 450px")

    setters {
      privacy_switcher.display-mode: icons;
    }
  }

  styles [
    "view",
  ]
}

$Form compose_form {
  form: template;
  submit: send_button;

  plain: StringList {
    strings [
      "subject",
      "body",
    ]
  };

  address-lists: Gtk.StringList {
    strings [
      "readers",
    ]
  };
}
