using Gtk 4.0;
using Adw 1;

template $LoginView: Adw.Bin {
  child: Adw.NavigationView navigation_view {
    Adw.NavigationPage {
      tag: "landing";
      title: _("Log In");

      child: Adw.ToolbarView {
        [top]
        Adw.HeaderBar {
          show-title: false;
        }

        content: Adw.StatusPage email_status_page {
          title: _("Email of the Future, Today");
          description: _("Spam-free, phishing-free, private &amp; secure by design");

          child: Adw.Clamp {
            child: Box {
              orientation: vertical;

              Adw.PreferencesGroup {
                Adw.EntryRow email_entry {
                  title: _("Email");
                  entry-activated => $_log_in();
                }
              }

              Box {
                margin-top: 12;
                halign: center;
                spacing: 12;

                Button {
                  label: _("Create Account");
                  clicked => $_sign_up();

                  styles [
                    "pill",
                  ]
                }

                Button log_in_button {
                  label: _("Log In");
                  clicked => $_log_in();

                  styles [
                    "pill",
                    "suggested-action",
                  ]
                }
              }
            };
          };
        };
      };
    }

    Adw.NavigationPage {
      tag: "keys";
      title: _("Private Keys");

      child: Adw.ToolbarView {
        [top]
        Adw.HeaderBar {
          show-title: false;
        }

        content: Adw.StatusPage {
          title: bind email_entry.text;
          description: _("Enter your private keys");
          icon-name: "key-symbolic";

          child: Adw.Clamp {
            child: Box {
              orientation: vertical;

              Adw.PreferencesGroup {
                separate-rows: true;

                Adw.PasswordEntryRow signing_key_entry {
                  title: _("Private Signing Key");
                  entry-activated => $_focus_encryption_key_entry();
                }

                Adw.PasswordEntryRow encryption_key_entry {
                  title: _("Private Encryption Key");
                  entry-activated => $_authenticate();
                }
              }

              Button auth_button {
                margin-top: 12;
                halign: center;
                clicked => $_authenticate();

                child: Adw.ViewStack {
                  enable-transitions: true;
                  visible-child-name: bind template.button-child-name;

                  Adw.ViewStackPage {
                    name: "label";

                    child: Label {
                      label: _("Authenticate");
                    };
                  }

                  Adw.ViewStackPage {
                    name: "loading";

                    child: Adw.Spinner {};
                  }
                };

                styles [
                  "pill",
                  "text-button",
                  "suggested-action",
                ]
              }
            };
          };
        };
      };
    }

    Adw.NavigationPage {
      tag: "sign-up";
      title: _("Create Account");

      child: Adw.ToolbarView {
        [top]
        Adw.HeaderBar {
          show-title: false;
        }

        content: Adw.StatusPage {
          title: _("Up & Running in Seconds");
          description: _("Get a free email address on the network");

          child: Adw.Clamp {
            child: Box {
              orientation: vertical;

              Box {
                margin-start: 6;
                margin-end: 6;
                margin-bottom: 24;
                orientation: vertical;
                spacing: 6;

                Label {
                  label: _("• Attachments without size limits");
                  wrap: true;
                  halign: start;
                }

                Label {
                  label: _("• End-to-end encrypted private messages");
                  wrap: true;
                  halign: start;
                }

                Label {
                  label: _("• Public messages anyone can read, even without an account");
                  wrap: true;
                  halign: start;
                }

                Label {
                  label: _("• People can only message you after your approval");
                  wrap: true;
                  halign: start;
                }

                Label {
                  label: _("• Using the open <a href=\"https://www.open.email\">Mail/HTTPS protocol</a>");
                  wrap: true;
                  halign: start;
                  use-markup: true;
                }
              }

              Adw.PreferencesGroup {
                Adw.EntryRow user_name_entry {
                  title: _("User Name");
                  text: bind email_entry.text bidirectional;
                  entry-activated => $_register();

                  [suffix]
                  Label {
                    label: "@open.email";

                    styles [
                      "dimmed",
                    ]
                  }
                }
              }

              Button register_button {
                margin-top: 12;
                halign: center;
                clicked => $_register();

                child: Adw.ViewStack {
                  enable-transitions: true;
                  visible-child-name: bind template.register-button-child-name;

                  Adw.ViewStackPage {
                    name: "label";

                    child: Label {
                      label: _("Register");
                    };
                  }

                  Adw.ViewStackPage {
                    name: "loading";

                    child: Adw.Spinner {};
                  }
                };

                styles [
                  "pill",
                  "suggested-action",
                ]
              }
            };
          };
        };
      };
    }
  };
}

$Form email_form {
  form: template;
  submit: log_in_button;

  addresses: StringList {
    strings [
      "email_entry",
    ]
  };
}

$Form register_form {
  form: template;
  submit: register_button;

  plain: StringList {
    strings [
      "user_name_entry",
    ]
  };
}

$Form auth_form {
  form: template;
  submit: auth_button;

  plain: StringList {
    strings [
      "encryption_key_entry",
      "signing_key_entry",
    ]
  };
}
